Git Guide
By Elisabeth Sykorova

1.	Init
-	Creates a new repository locally 
-	Format: git init
 
2.	Add
-	Adds all new files (also edited files) 
-	Format: git add .
-	To add specific files -> git add filename/pattern
 
3.	Status
-	Lists files modified in the working area, added files in staging area and current branch  
-	Format: git status
 
4.	Commit
-	Records changes to the repository (=snapshot/backup)  
-	Format: git commit -m “comment”
-	To enter editor mode for multiline comments -> git commit
 
5.	Remote
-	Manages set of tracked repositories, used to clone repositories
 
-	Format: git remote …
-	Different uses -> add, rename, remove,..
 
6.	Push
-	Used to update remote node with current node
 
-	Format: git push -u origin master (depending on what the branch name changes to)
 
7.	Branch
-	Used to create a new branch in the local repository that can be worked on separately from the main branch and later merged.
 
-	Format: git branch new_branch_name
-	To list all branches in repository: git branch -a/-l/-r
 
8.	Checkout
-	Makes chosen node the current HEAD
 
 
-	Format: git checkout branch_name
 
9.	Merge
-	Used to merge target branch into current branch. To update main branch you have to first switch into it.
 
-	Format: git merge branch_name (of a branch that is the further one)
-	To merge head with master -> git merge master
 
10.	Log
-	Shows the history of commits in the terminal, can be altered using special arguments.
 
 
-	Format: git log
-	Controlled by <space> or arrows to scroll, <q> to quit
-	Altered files and the number of changed lines -> git log --stat
-	Drawn branch paths -> git log --graph
